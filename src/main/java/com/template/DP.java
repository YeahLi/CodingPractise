package com.template;

/**
 *  使用场景:
 *   - 求方案总数 (90%)
 *   - 求最值 (89%)
 *   - 求可行性 (80%)
 *  不适用场景:
 *   - 找所有具体的方案 (准确率 99%)
 *   - 输入数据无序(除了背包问题外)
 *   - 暴力算法已经是多项式时间复杂度
 */

/**
 * 动态规划四要素
 * - 状态(state) -- 递归的定义
 * - 方程(Function) -- 递归的拆解
 * - 初始化(initialization) - 递归的出口
 * - 答案(Answer) - 递归的调用
 */
public class DP {

}
